@using Newtonsoft.Json.Linq
@model CheckIn.Website.ViewModels.AddEventViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("AddEvent", "AddEvent"))
{

    <div class="jumbotron">
        <div class="form-group row">
            @Html.LabelFor(e => e.EventTypeId, "Event Type", new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(e => e.EventTypeId, new SelectList(ViewBag.EventTypes, "Id", "EventTypeName"), " ", new { @class = "form-control" })
                @Html.ValidationMessageFor(e => e.EventTypeId)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(n => n.NameOfEvent, "Name Of Event", new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(n => n.NameOfEvent, new { @class = "form-control" })
                @Html.ValidationMessageFor(n => n.NameOfEvent)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(d => d.Date, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(d => d.Date, new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.Date)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(t => t.Time, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(t => t.Time, new { @class = "form-control" })
                @Html.ValidationMessageFor(t => t.Time)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(p => p.PlaceOfEvent, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(p => p.PlaceOfEvent, new { @class = "form-control" })
                @Html.ValidationMessageFor(p => p.PlaceOfEvent)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(a => a.Address, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(a => a.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(a => a.Address)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(c => c.City, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(c => c.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.City)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(s => s.StateId, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(s => s.StateId, new SelectList(ViewBag.States, "Id", "NameOfTheState"), " ", new { @class = "form-control" })
                @Html.ValidationMessageFor(s => s.StateId)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(z => z.ZipCode, new { @class = "col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(z => z.ZipCode, " ", new { @class = "form-control" })
                @Html.ValidationMessageFor((z => z.ZipCode))
            </div>
        </div>
        <button type="submit" class="btn btn-success">Save Event</button>
    </div>

}
